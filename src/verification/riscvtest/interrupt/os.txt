
os.elf:     file format elf32-littleriscv


Disassembly of section .text:

80000000 <_init_system>:

# .globl __am_asm_trap

# 系统初始化
_init_system:
   MAP(REGS, RESET)
80000000:	00000093          	li	ra,0
80000004:	00000193          	li	gp,0
80000008:	00000213          	li	tp,0
8000000c:	00000293          	li	t0,0
80000010:	00000313          	li	t1,0
80000014:	00000393          	li	t2,0
80000018:	00000413          	li	s0,0
8000001c:	00000493          	li	s1,0
80000020:	00000513          	li	a0,0
80000024:	00000593          	li	a1,0
80000028:	00000613          	li	a2,0
8000002c:	00000693          	li	a3,0
80000030:	00000713          	li	a4,0
80000034:	00000793          	li	a5,0
80000038:	00000813          	li	a6,0
8000003c:	00000893          	li	a7,0
80000040:	00000913          	li	s2,0
80000044:	00000993          	li	s3,0
80000048:	00000a13          	li	s4,0
8000004c:	00000a93          	li	s5,0
80000050:	00000b13          	li	s6,0
80000054:	00000b93          	li	s7,0
80000058:	00000c13          	li	s8,0
8000005c:	00000c93          	li	s9,0
80000060:	00000d13          	li	s10,0
80000064:	00000d93          	li	s11,0
80000068:	00000e13          	li	t3,0
8000006c:	00000e93          	li	t4,0
80000070:	00000f13          	li	t5,0
80000074:	00000f93          	li	t6,0
   la a5, __am_asm_trap
80000078:	00000797          	auipc	a5,0x0
8000007c:	01878793          	add	a5,a5,24 # 80000090 <__am_asm_trap>
   csrw	mtvec, a5
80000080:	30579073          	csrw	mtvec,a5
   la	sp, stacks + STACK_SIZE	# set the initial stack pointer
80000084:	00000117          	auipc	sp,0x0
80000088:	56010113          	add	sp,sp,1376 # 800005e4 <_test>
   jal _test 
8000008c:	558000ef          	jal	800005e4 <_test>

80000090 <__am_asm_trap>:

# 中断处理程序
__am_asm_trap:
  addi sp, sp, -CONTEXT_SIZE
80000090:	f7010113          	add	sp,sp,-144

  MAP(REGS, PUSH)
80000094:	00112223          	sw	ra,4(sp)
80000098:	00312623          	sw	gp,12(sp)
8000009c:	00412823          	sw	tp,16(sp)
800000a0:	00512a23          	sw	t0,20(sp)
800000a4:	00612c23          	sw	t1,24(sp)
800000a8:	00712e23          	sw	t2,28(sp)
800000ac:	02812023          	sw	s0,32(sp)
800000b0:	02912223          	sw	s1,36(sp)
800000b4:	02a12423          	sw	a0,40(sp)
800000b8:	02b12623          	sw	a1,44(sp)
800000bc:	02c12823          	sw	a2,48(sp)
800000c0:	02d12a23          	sw	a3,52(sp)
800000c4:	02e12c23          	sw	a4,56(sp)
800000c8:	02f12e23          	sw	a5,60(sp)
800000cc:	05012023          	sw	a6,64(sp)
800000d0:	05112223          	sw	a7,68(sp)
800000d4:	05212423          	sw	s2,72(sp)
800000d8:	05312623          	sw	s3,76(sp)
800000dc:	05412823          	sw	s4,80(sp)
800000e0:	05512a23          	sw	s5,84(sp)
800000e4:	05612c23          	sw	s6,88(sp)
800000e8:	05712e23          	sw	s7,92(sp)
800000ec:	07812023          	sw	s8,96(sp)
800000f0:	07912223          	sw	s9,100(sp)
800000f4:	07a12423          	sw	s10,104(sp)
800000f8:	07b12623          	sw	s11,108(sp)
800000fc:	07c12823          	sw	t3,112(sp)
80000100:	07d12a23          	sw	t4,116(sp)
80000104:	07e12c23          	sw	t5,120(sp)
80000108:	07f12e23          	sw	t6,124(sp)

  csrr t0, mcause
8000010c:	342022f3          	csrr	t0,mcause
  csrr t1, mstatus
80000110:	30002373          	csrr	t1,mstatus
  csrr t2, mepc
80000114:	341023f3          	csrr	t2,mepc

  STORE t0, OFFSET_CAUSE(sp)
80000118:	08512023          	sw	t0,128(sp)
  STORE t1, OFFSET_STATUS(sp)
8000011c:	08612223          	sw	t1,132(sp)
  STORE t2, OFFSET_EPC(sp)
80000120:	08712423          	sw	t2,136(sp)

  # set mstatus.MPRV to pass difftest
  li a0, (1 << 17)
80000124:	00020537          	lui	a0,0x20
  or t1, t1, a0
80000128:	00a36333          	or	t1,t1,a0
  csrw mstatus, t1
8000012c:	30031073          	csrw	mstatus,t1

  mv a0, sp
80000130:	00010513          	mv	a0,sp
  jal _trap_handler
80000134:	4e4000ef          	jal	80000618 <_trap_handler>

  LOAD t1, OFFSET_STATUS(sp)
80000138:	08412303          	lw	t1,132(sp)
  LOAD t2, OFFSET_EPC(sp)
8000013c:	08812383          	lw	t2,136(sp)
  csrw mstatus, t1
80000140:	30031073          	csrw	mstatus,t1
  csrw mepc, t2
80000144:	34139073          	csrw	mepc,t2

  MAP(REGS, POP)
80000148:	00412083          	lw	ra,4(sp)
8000014c:	00c12183          	lw	gp,12(sp)
80000150:	01012203          	lw	tp,16(sp)
80000154:	01412283          	lw	t0,20(sp)
80000158:	01812303          	lw	t1,24(sp)
8000015c:	01c12383          	lw	t2,28(sp)
80000160:	02012403          	lw	s0,32(sp)
80000164:	02412483          	lw	s1,36(sp)
80000168:	02812503          	lw	a0,40(sp)
8000016c:	02c12583          	lw	a1,44(sp)
80000170:	03012603          	lw	a2,48(sp)
80000174:	03412683          	lw	a3,52(sp)
80000178:	03812703          	lw	a4,56(sp)
8000017c:	03c12783          	lw	a5,60(sp)
80000180:	04012803          	lw	a6,64(sp)
80000184:	04412883          	lw	a7,68(sp)
80000188:	04812903          	lw	s2,72(sp)
8000018c:	04c12983          	lw	s3,76(sp)
80000190:	05012a03          	lw	s4,80(sp)
80000194:	05412a83          	lw	s5,84(sp)
80000198:	05812b03          	lw	s6,88(sp)
8000019c:	05c12b83          	lw	s7,92(sp)
800001a0:	06012c03          	lw	s8,96(sp)
800001a4:	06412c83          	lw	s9,100(sp)
800001a8:	06812d03          	lw	s10,104(sp)
800001ac:	06c12d83          	lw	s11,108(sp)
800001b0:	07012e03          	lw	t3,112(sp)
800001b4:	07412e83          	lw	t4,116(sp)
800001b8:	07812f03          	lw	t5,120(sp)
800001bc:	07c12f83          	lw	t6,124(sp)

  addi sp, sp, CONTEXT_SIZE
800001c0:	09010113          	add	sp,sp,144
  la x1, 0x800005e8
800001c4:	800000b7          	lui	ra,0x80000
800001c8:	5e808093          	add	ra,ra,1512 # 800005e8 <_test+0x4>
  jalr x0, x1, 0
800001cc:	00008067          	ret
  mret # mcu don't implement ecall correct, so mepc is not write --> mret not working
800001d0:	30200073          	mret
  nop
800001d4:	00000013          	nop
  nop
800001d8:	00000013          	nop
  nop
800001dc:	00000013          	nop
  nop
800001e0:	00000013          	nop

800001e4 <stacks>:
	...

800005e4 <_test>:
.global _test
.global _trap_handler
_test:
   ecall
800005e4:	00000073          	ecall
   addi x1, x0, 100
800005e8:	06400093          	li	ra,100
   addi x2, x0, 0
800005ec:	00000113          	li	sp,0
   nop
800005f0:	00000013          	nop
   nop
800005f4:	00000013          	nop
   nop
800005f8:	00000013          	nop
   nop
800005fc:	00000013          	nop
   nop
80000600:	00000013          	nop
   ebreak # finish _test
80000604:	00100073          	ebreak
   nop
80000608:	00000013          	nop
   nop
8000060c:	00000013          	nop
   nop
80000610:	00000013          	nop
   nop
80000614:	00000013          	nop

80000618 <_trap_handler>:


_trap_handler:
   # addi x1, x0, 0 # don't use x1 or ret will not work
   addi x2, x0, 0 
80000618:	00000113          	li	sp,0
   addi x3, x0, 0 
8000061c:	00000193          	li	gp,0
   addi x4, x0, 0 
80000620:	00000213          	li	tp,0
   ret
80000624:	00008067          	ret
